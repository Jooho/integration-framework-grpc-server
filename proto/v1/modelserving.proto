syntax = "proto3";

package api;

option go_package = ".;modelserving";

service ModelServing {
  rpc ListApp(GetAppRequest) returns (GetAppResponse);
  rpc GetAppParams(GetAppParamsRequest) returns (GetAppParamsResponse);
  rpc GetAppCustomResource(GetRenderedCRRequest) returns (GetRenderedCRResponse);
}

message Application {
  string name = 1;
  string provider = 2;
  string csvName = 3;
  string minSupportedVersion = 4;
  bool installed = 5;
  string template = 6;
  // Support support = 7;
  // Integration integration = 8;
}

message Support {
  bool isv = 1;
  bool redhat = 2;
}
message Integration {
  string install_doc_url = 1;
  string level = 2;
}

message GetAppRequest {
  string namespace = 1;
  optional string appName = 2;
}

message GetAppResponse { repeated Application applications = 1; }

message GetAppParamsRequest {
  string appName = 1;
  string storageType = 2;
  string storageName = 3;
  string storageNamespace = 4;
}

message GetAppParamsResponse {
  string appName = 1;
  string storageType = 2;
  string storageName = 3;
  string storageNamespace = 4;
  string parameters = 5;
}

message GetRenderedCRRequest {
  string appName = 1;
  string storageType = 2;
  string storageName = 3;
  string storageNamespace = 4;

  map<string, string> parameters = 5;
}

message GetRenderedCRResponse {
  bytes manifest = 1;
}